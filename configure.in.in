#MIN_CONFIG(3.0.0)

#------------------------------------------------------------------------------#
#                                                                              #
#          This script was written by Valery VANDAELE vavdaele@ulb.ac.be       #
#                                                                              #
#------------------------------------------------------------------------------#


AM_INIT_AUTOMAKE(galilei, 1.0)
AC_C_BIGENDIAN


#--------------------- CHECK THE USE OF KDE FRONTEND ---------

AC_ARG_ENABLE(kde, [  --enable-kde            enable kde frontend for plugins [[default=no]]],,enable_kde=no)


if test "$enable_kde" != "no"; then
	dnl check for qt libs
	KDE_SET_PREFIX
	KDE_PROG_LIBTOOL
	AM_KDE_WITH_NLS
	KDE_USE_QT
	AC_PATH_KDE
	AC_CHECK_KDEMAXPATHLEN
	FRONTEND="kde"
	echo " -----------------------------------"
	echo " -- KDE Frontend will be compiled --"
	echo " -----------------------------------"
fi

AC_SUBST(FRONTEND)


#--------------------- END CHECK THE USE OF KDE FRONTEND ---------


#--------------------- CURL -----------------------------
# ---- INCLUDES and LIBS for CURL ----

AC_PATH_PROG(CURL_CONFIG,curl-config)
if [ test -n "$CURL_CONFIG" ]; then
	CURL_INCLUDES=`$CURL_CONFIG --cflags`
	CURL_PREFIX=`$CURL_CONFIG --prefix`
	if test "${CURL_PREFIX}/lib" != "/usr/lib" ; then
		CURL_LIBS="-L${CURL_PREFIX}/lib"
	fi
else         
	CURL_INCLUDES=""
	CURL_LIBS=""
fi

# ---- add configure option : --with-curlincludedir=DIR ----
AC_ARG_WITH(curlincludedir,
	[  --with-curlincludedir=DIR use CURL includes from DIR],
	[CURL_INCLUDES="-I$withval"])
CPPFLAGS="$CPPFLAGS $CURL_INCLUDES"

# ---- add configure option : --with-curllibdir=DIR -----
AC_ARG_WITH(curllibdir,
	[  --with-curllibdir=DIR   use CURL libraries from DIR],
	[CURL_LIBS="-L$withval"])
LDFLAGS="$LDFLAGS $CURL_LIBS"

# ---- check if the include file and if the library are present ----
AC_CHECK_HEADER(curl/curl.h,
	[AC_CHECK_LIB(curl,main,
		[CURL_LIBS="$CURL_LIBS -lcurl"
		AC_DEFINE_UNQUOTED(HAVE_LIBCURL,1,
			[Define if you have the CURL library])],
		[AC_MSG_ERROR(curl library is not available)
		CURL_INCLUDES="" CURL_LIBS=""])],
	[AC_MSG_ERROR(curl library headers are not available - no curl.h)])


AC_SUBST(CURL_INCLUDES)
AC_SUBST(CURL_LIBS)
#--------------------- END CURL -----------------------------


#--------------------- LTMM -----------------------------
# ---- add configure option : --with-ltmm=DIR ----
AC_ARG_WITH(ltmm,
	AC_HELP_STRING(
		[--with-ltmm=DIR],
		[use LTMM includes directory [[/usr/include/ltmm]]]),
	[LTMM_DIR="$withval"],
	[LTMM_DIR="/usr/include/ltmm"])

AC_MSG_CHECKING(for ltmm/loader.hh)

# ---- Determine LTMM installation paths   -----
for i in $LTMM_DIR /usr/include /usr/local /usr/local/ltmm; do
   test -f $i/loader.hh                    && LTMM_INC_DIR=$i/
   test -f $i/ltmm/loader.hh              && LTMM_INC_DIR=$i/ltmm
   test -f $i/include/ltmm/loader.hh              && LTMM_INC_DIR=$i/include/ltmm
done

if test -z "$LTMM_INC_DIR"; then
	if test "x$LTMM_DIR" != "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_ERROR(Cannot find LTMM header files under $LTMM_DIR)
	else
		AC_MSG_RESULT(no)
		AC_MSG_ERROR(Cannot find LTMM headers.  Use --with-ltmm= to specify non-default path.)
	fi
fi

AC_MSG_RESULT(yes)

CPPFLAGS=" -I$LTMM_DIR $CPPFLAGS"

#--------------------- END LTMM -----------------------------

#--------------------- R LIB -----------------------------
#VARIABLES USE :
#	$R_LIB environnement variable used for developpment
#	$R_INC_PATH = the path specified in the --with-r-includes
#	$R_LIB_PATH = the path specified in the --with-r-libs
#	$R_INC_DIR = the directory where the includes were found
#	$R_LIB_DIR = the directory where the libraries were found

#---------------------------------------------------------
# ---- add configure option : --with-r-includes=DIR ----
if test "x$R_LIB" != "x" ; then
	R_INC_PATH=$R_LIB
else
	R_INC_PATH="/usr/include/r /usr/include /usr/include/r /usr/local /usr/local/include /usr/local/include/r ${prefix}/include/r"
fi
AC_ARG_WITH(r-includes,
	AC_HELP_STRING(
		[--with-r-includes=DIR],
		[where the R includes are, like [/usr/include/r]. ]),
	R_INC_PATH="$withval")


# ---- add configure option : --with-r-libs=DIR ----
if test "x$R_LIB" != "x" ; then
	R_LIB_PATH=$R_LIB
else
	R_LIB_PATH="/usr/lib /usr/lib/r /usr/local/lib /usr/local/lib/r ${prefix}/lib/r"
fi
AC_ARG_WITH(r-libs,
	AC_HELP_STRING(
		[--with-r-libs=DIR],
		[where the R libraries are installed, like [/usr/lib]. ]),
	R_LIB_PATH="$withval")


# ---- end arg for configure ----

# ---- end arg for configure ----

# ---- def function to check for a specific R library on the system
AC_DEFUN(R_LIB_CHK,[
	str="$1/lib$2.*"
	R_LIB_DIR=""
	for j in `echo $str`; do
		if test -r $j; then
		R_LIB_DIR=$1
		break 2
	fi
	done
])
# --- end def function -----


# ---- def function to check for a specific R includes on the system
AC_DEFUN(R_INC_CHK,[
	R_INC_DIR=""
	str="$1/$2"
	for i in $R_INC_PATH ; do
		test -f $i/$str                    && R_INC_DIR=$i/$1 && break
		#test -f $i/r/$str              && R_INC_DIR=$i/r/$1 && break
	done
	AC_MSG_CHECKING(for $1/$2)
	if test -z "$R_INC_DIR"; then
		if test "x$R_INC_PATH" != "x"; then
			AC_MSG_RESULT(no)
			AC_MSG_ERROR(Cannot find $1 header files under $R_INC_PATH)
		else
			AC_MSG_RESULT(no)
			AC_MSG_ERROR(Cannot find $2 headers.  Use --with-r-includes= to specify non-default path.)
		fi
	fi
	AC_MSG_RESULT(yes in $R_INC_DIR)

	if test "x$i" != "x$PAST_R_INC_DIR"; then
		CPPFLAGS="-I$i $CPPFLAGS"
	fi
	PAST_R_INC_DIR="$i"

])
# --- end def function -----

# ---- check the presence of the includes for all the R libraries
R_INC_CHK(rdb,rmysql.h)
R_INC_CHK(rga,rga.h)
R_INC_CHK(rga2d,rga2d.h)
R_INC_CHK(rgga,rgga.h)
R_INC_CHK(rmath,rgraph.h)
R_INC_CHK(rprg,rprg.h)
R_INC_CHK(rpromethee,rpromethee.h)
R_INC_CHK(rstd,rcontainer.h)


# ---- check the presence of all R libraries
for l in rdb rga rga2d rgga rmath rprg rpromethee rstd; do

	#AC_MSG_CHECKING(for lib$l)
	for i in $R_LIB_PATH ; do
		R_LIB_CHK($i/$l,$l)  #check for local presence
		R_LIB_CHK($i,$l)
		R_LIB_CHK($i/r,$l)
	done
	AC_MSG_CHECKING(for lib$l)
	if test -z "$R_LIB_DIR"; then
		AC_MSG_RESULT(no)
		AC_MSG_ERROR(Cannot find lib$l)
	else
		AC_MSG_RESULT(yes in $R_LIB_DIR)
	fi
	if test "x$R_LIB_DIR" != "x$PAST_R_LIB_DIR"; then
		LDFLAGS="-L$R_LIB_DIR $LDFLAGS"
	fi
PAST_R_LIB_DIR="$R_LIB_DIR"

done


#--------------------- END R LIB -----------------------------



CXXFLAGS="$CXXFLAGS $USE_EXCEPTIONS"
