#MIN_CONFIG(3.0.0)
#------------------------------------------------------------------------------#
#                                                                              #
#          This script was written by Valery VANDAELE vavdaele@ulb.ac.be       #
#                                                                              #
#------------------------------------------------------------------------------#



AM_INIT_AUTOMAKE(filters, 1.1)
AC_C_BIGENDIAN

#--------------------- CHECK THE USE OF KDE FRONTEND ---------

AC_ARG_ENABLE(kde, [  --enable-kde            enable kde frontend for plugins [[default=no]]],,enable_kde=no)


if test "$enable_kde" != "no"; then
	dnl check for qt libs
	echo "compile frontend... KDE"
	KDE_SET_PREFIX
	KDE_PROG_LIBTOOL
	AM_KDE_WITH_NLS
	KDE_USE_QT
	AC_PATH_KDE
	AC_CHECK_KDEMAXPATHLEN
	FRONTEND="kde"
	CXXFLAGS="$CXXFLAGS -D_USE_KDE"
fi

AC_SUBST(FRONTEND)

#--------------------- END CHECK THE USE OF KDE FRONTEND ---------


#--------------------- CHECK THE USE OF wvWare lib ---------

AC_ARG_ENABLE(wvWare, [  --enable-wv2            enable wvWare2 library for MSDOC filter plugin [[default=yes]]],,enable_wvWare=yes)

#--------------------- END CHECK THE USE wvWare lib ---------

#--------------------- check wvWare2 LIB -----------------------------
dnl ==== Check for wv2 library  ====
AC_ARG_WITH(libwv2,[  --with-libwv2=DIR       use libwv2 in DIR],[
	if [ test "x$withval" != "xno" ]; then
		if [ test "x$withval" != "xyes" ]; then
			WV2_DIR=$withval
		fi
		search_for_wv2=yes
	else
		search_for_wv2=no
	fi
],[	search_for_wv2=yes
])

if test "$enable_wvWare" == "yes" ; then
	if [ test $search_for_wv2 != no ]; then
		if [ test -n "$WV2_DIR" ]; then
			KDE_FIND_PATH(wv2-config, WV2_CONFIG, [$WV2_DIR/bin], [
		  	AC_MSG_ERROR([Could not find libwv2, check 	http://www.sourceforge.net/projects/wvware/])
			])
		else
			KDE_FIND_PATH(wv2-config, WV2_CONFIG, [${prefix}/bin ${exec_prefix}/bin 	/usr/local/bin /opt/local/bin], [
			  AC_MSG_ERROR([Could not find libwv2 anywhere, check 	http://www.sourceforge.net/projects/wvware/])
			])
		fi
	fi

	if test -n "$WV2_CONFIG"; then
		vers=`$WV2_CONFIG --version 2>/dev/null | sed -e 's/libwv2 //' | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
		if test -n "$vers" && test "$vers" -ge 1008
		then
			LIBWV2_LIBS="`$WV2_CONFIG --libs`"
			LIBWV2_RPATH=
			for args in $LIBWV2_LIBS; do
	  			case $args in
				    -L*)
		  	       LIBWV2_RPATH="$LIBWV2_RPATH $args"
		 	       ;;
        			esac
			done
			LIBWV2_RPATH=`echo $LIBWV2_RPATH | sed -e "s/-L/-R/g"`
			LIBWV2_CFLAGS="`$WV2_CONFIG --cflags`"

			AC_DEFINE_UNQUOTED(HAVE_WV2, 1, [Defines if your system has the wv2 library])
		else
			AC_MSG_ERROR([You need at least libwv2 0.1.8])
		fi
	fi
else
	echo
	echo " -------------------------------------"
	echo " -- wvWare library will be disabled --"
	echo " --   THE MSDOC FILTER will NOT be  --"
	echo " -- available without this library  --"
	echo " -------------------------------------"
	echo
fi

dnl ==== End of Check for wv2 library  ====
#--------------------- wvWare2 LIB -----------------------------


#--------------- Check R and GALILEI ------------------
R_CHK("rcore rmath roptimization",$FRONTEND)
GALILEI_CHK($FRONTEND)


#--------------------- CHECK FOR RDEBUG ----------------------
if test "$enable_debug" != "no"; then
	CXXFLAGS="$CXXFLAGS -D_RDEBUG"
fi


#-----------------Define Instalation Path --------------------------

docslibdir=${libdir}/galilei/plugins/docs
AC_SUBST(docslibdir)
engineslibdir=${libdir}/galilei/plugins/engines
AC_SUBST(engineslibdir)
filterslibdir=${libdir}/galilei/plugins/filters
AC_SUBST(filterslibdir)
groupinglibdir=${libdir}/galilei/plugins/grouping
AC_SUBST(groupinglibdir)
groupslibdir=${libdir}/galilei/plugins/groups
AC_SUBST(groupslibdir)
langslibdir=${libdir}/galilei/plugins/langs
AC_SUBST(langslibdir)
linkinglibdir=${libdir}/galilei/plugins/linking
AC_SUBST(linkinglibdir)
metaengineslibdir=${libdir}/galilei/plugins/metaengines
AC_SUBST(metaengineslibdir)
postdoclibdir=${libdir}/galilei/plugins/postdoc
AC_SUBST(postdoclibdir)
postgroupslibdir=${libdir}/galilei/plugins/postgroups
AC_SUBST(postgroupslibdir)
profilinglibdir=${libdir}/galilei/plugins/profiling
AC_SUBST(profilinglibdir)
statslibdir=${libdir}/galilei/plugins/stats
AC_SUBST(statslibdir)

#-----------------END of Define Instalation Path --------------------------

CXXFLAGS="$CXXFLAGS $USE_EXCEPTIONS"
