/***************************************************************************
 *   Copyright (C) 2005 by Jean-Baptiste Valsamis                          *
 *   jvalsami@ulb.ac.be                                                    *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#include "xstuff.h"
#include "xgeneral.h"

Int::Int(const int &_i)
{
	i = _i;
	__NEW__(INT, i);
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
int Int::Get() const
{
	return i;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
void Int::Set(const int &_i)
{
	i = _i;
}

/*//______________________________________________________________________________
//------------------------------------------------------------------------------
int Int::Compare(const int &_i) const
{
	return i - _i;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
int Int::Compare(const int *_i) const
{
	return i - *_i;
}*/

//______________________________________________________________________________
//------------------------------------------------------------------------------
int Int::Compare(const Int &_i) const
{
	return i - _i.i;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
int Int::Compare(const Int *_i) const
{
	return i - _i->i;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
Int::~Int()
{
	__DEL__(INT, i);
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
IInt::IInt(const int &_i, const int &_j)
{
	i = _i;
	j = _j;
	__NEW__(IIT, i, j);
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
int IInt::Geti() const
{
	return i;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
int IInt::Getj() const
{
	return j;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
void IInt::Set(const int &_i, const int &_j)
{
	i = _i;
	j = _j;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
int IInt::Compare(const int &_i, const int &_j) const
{
	if (i == _i)
		return j - _j;
	return i - _i;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
int IInt::Compare(const IInt *_ii) const
{
	if (i == _ii->i)
		return j - _ii->j;
	return i - _ii->i;
}

//______________________________________________________________________________
//------------------------------------------------------------------------------
IInt::~IInt()
{
	__DEL__(IIT, i, j);
}
